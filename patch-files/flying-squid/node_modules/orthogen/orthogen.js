'use strict';

const Vec3 = require('vec3').Vec3;
const mcData = require('minecraft-data')('1.16.1')
const rand = require('random-seed')

function mountain(chunk, level, seedRand) {
  for (let x = 0 ; x < 16 ; x++) {
    for (let y = 0; y < 16; y++) {
      const block = mcData.blocksByName.dirt.id
      const pos = new Vec3(x, level, y)
      chunk.setBlockType(pos, block)
      chunk.setSkyLight(pos, 15)
    }
  }
  for (let h = 0; h < 8; h++) {
    for (let x = 0 + h; x < 16 - h; x++) {
      for (let y = 0 + h; y < 16 - h; y++) {
        if (seedRand(20) < 18) {
          let data = 1;
          if (h > 4 + seedRand(3)) { data = 0 }
          const pos = new Vec3(x, h + level + 1, y)
          chunk.setBlockType(pos, mcData.blocksByName.grass_block.id)
          chunk.setBlockData(pos, data)
          chunk.setSkyLight(pos, 15)
          const posUnder = new Vec3(x, h + level, y)
          chunk.setBlockType(posUnder, mcData.blocksByName.dirt.id)
          chunk.setBlockData(posUnder, 0)
          chunk.setSkyLight(posUnder, 15)
        } else {
          const pos = new Vec3(x, h + level, y)
          chunk.setBlockType(pos, mcData.blocksByName.grass_block.id)
          chunk.setBlockData(pos, 1)
          chunk.setSkyLight(pos, 15)
        }
      }
    }
  }
}

function generation ({ version = '1.16.1', seed } = {}) {
  const size = 101*16*6
  const Chunk = require('prismarine-chunk')(version)
  const majorVersion = mcData.version.majorVersion

  function generateSimpleChunk (chunkX, chunkY) {
    const chunk = new Chunk()
    const worldX = chunkX * 16 + size / 2
    const worldY = chunkY * 16 + size / 2
    const seedRand = rand.create(seed + ':' + chunkX + ':' + chunkY)
    const level = 20 + seedRand(2)

    for (let x = 0; x < 16; x++) {
      for (let y = 0; y < 16; y++) {
        const bedrockheight = 1 + seedRand(4)
        for (let z = 0; z < 256; z++) {
          let block
          let data
          if (z < bedrockheight) { 
            block = mcData.blocksByName.bedrock.id 
          } else if (z < level) {
            block = (seedRand(10) < 9) ? mcData.blocksByName.dirt.id : mcData.blocksByName.sand.id
          } else if (z === level) {
            block = mcData.blocksByName.grass_block.id  // Set surface sand/grass
            data = 1
          } else if (z === level + 1 && seedRand(10) === 0) {
            block = mcData.blocksByName.grass.id
          }
          const pos = new Vec3(x, z, y)
          if (block) { 
            chunk.setBlockType(pos, block)
          }
          if (data) {
            chunk.setBlockData(pos, data)
          }
          chunk.setSkyLight(pos, 15)
        }
      }
    }
    if (seedRand(10) === 9) { mountain(chunk, level, seedRand) };
    return chunk
  }

  return generateSimpleChunk
}



module.exports = generation;
