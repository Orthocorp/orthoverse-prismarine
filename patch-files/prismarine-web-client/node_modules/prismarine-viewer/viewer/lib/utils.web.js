/* global XMLHttpRequest */
const THREE = require('three')
const config = require('../../../../config.json')
const axios = require('axios')

const textureCache = {}
function loadTexture (texture, cb) {
  if (!textureCache[texture]) {
    let url = texture
    if (texture.substring(0,2) === '0x') {
      console.log("Player skin or cape request for " + texture)
      if (texture.substring(texture.length - 5) !== '-cape') {
        url = config.avatarAPI + 'skin?eth=' + texture
      } else {
        url = config.avatarAPI + 'cape?id=' + texture.slice(0, -5)
      }
    }
    textureCache[texture] = new THREE.TextureLoader().load(url)
  }
  cb(textureCache[texture])
}

function loadJSON (url, callback) {
  const xhr = new XMLHttpRequest()
  xhr.open('GET', url, true)
  xhr.responseType = 'json'
  xhr.onload = function () {
    const status = xhr.status
    if (status === 200) {
      callback(xhr.response)
    } else {
      throw new Error(url + ' not found')
    }
  }
  xhr.send()
}

// function to get address from name
const getAddressFromName = async (name) => {
console.log("Axios getName for " + config.avatarAPI + 'addressFromName?name=' + name)
  return axios.get(config.avatarAPI + 'addressFromName?name=' + name)
    .then(response => {
      console.log("This was the Axios response")
      console.log(response.data.address)
      return response.data.address
    })
    .catch(err => {
      console.log("Axios error")
      console.log(err)
      return "NameError"
    })
}

module.exports = { loadTexture, loadJSON, getAddressFromName }
